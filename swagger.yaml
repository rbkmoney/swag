swagger: '2.0'
info:
  version: 1.0.0
  title: RBK Money Common API
  description: "An API that implements System's entry point"
  termsOfService: 'http://rbkmoney.com/'
  contact:
    name: Anton Kuranda
    email: a.kuranda@rbkmoney.com
    url: 'https://api.rbkmoney.com'
host: api.rbkmoney.com
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
    description: JWT token
security:
  - bearer: []
responses:
  NotFound:
    description: Entity not found
    schema:
      $ref: '#/definitions/GeneralError'
  BadRequest:
    description: Illegal input for operation.
    schema:
      $ref: '#/definitions/LogicError'
parameters:
  requestID:
    name: X-Request-ID
    in: header
    description: Unique request identifier
    required: true
    type: string
paths:
  '/accounts/{account_id}/stats/finance':
    get:
      description: Account finance statistics
      tags:
        - Account
      operationId: getAccountStatFinance
      parameters:
        - $ref: '#/parameters/requestID'
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: string
        - name: from
          in: query
          description: Stat date from
          required: true
          type: string
          format: date
        - name: to
          in: query
          description: Stat date to
          required: true
          type: string
          format: date
        - name: bucket_size
          in: query
          description: Number of entities
          required: true
          type: integer
      responses:
        '200':
          description: Account finance statistics
          schema:
            type: array
            items:
                $ref: '#/definitions/AccountStatFinance'
        '404':
          $ref: '#/responses/NotFound'
  '/shops/{shop_id}/invoices':
    get:
      description: Search invoices
      tags:
        - Invoices
      operationId: getInvoices
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: limit
          in: query
          description: Invoices limit
          required: false
          type: integer
        - name: from
          in: query
          description: Invoices date from
          required: false
          type: string
          format: dateTime
        - name: to
          in: query
          description: Invoices date to
          required: false
          type: string
          format: dateTime
        - name: status
          in: query
          description: Invoices statuses
          required: false
          type: string
          enum:
            - unpaid
            - cancelled
            - paid
            - partial
            - refunded
            - fulfilled
      responses:
        '200':
          description: List of invoices
          schema:
            type: array
            items:
                $ref: '#/definitions/Invoice'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
    post:
      description: Create new invoice
      tags:
        - Invoices
      operationId: createInvoice
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: createInvoiceArgs
          description: Create new invoice
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateInvoiceArgs'
      responses:
        '201':
          description: Invoice created
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
  '/shops/{shop_id}/invoices/stats/finance':
    get:
      description: Get invoices stats finance
      tags:
        - Invoices
      operationId: getInvoicesStatFinance
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: from
          in: query
          description: Stat date from
          required: true
          type: string
          format: date
        - name: to
          in: query
          description: Stat date to
          required: true
          type: string
          format: date
        - name: bucket_size
          in: query
          description: Number of entities
          required: true
          type: integer
      responses:
        '200':
          description: Invoices stats finance
          schema:
            type: array
            items:
                $ref: '#/definitions/InvoicesStatFinance'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
  '/shops/{shop_id}/invoices/{invoice_id}':
    get:
      description: Returns invoice information by ID
      tags:
        - Invoices
      operationId: getInvoiceByID
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: invoice_id
          in: path
          description: Invoice ID
          required: true
          type: string
      responses:
        '200':
          description: Invoice object
          schema:
            $ref: '#/definitions/Invoice'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
  '/shops/{shop_id}/invoices/{invoice_id}/events':
    get:
      description: Returns invoice events
      tags:
        - Invoices
      operationId: getInvoiceEvents
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: invoice_id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: limit
          in: query
          description: Events limit
          required: true
          type: integer
        - name: event_id
          in: query
          description: Last seen event id
          required: false
          type: string
      responses:
        '200':
          description: List of invoice events
          schema:
            type: array
            items:
                $ref: '#/definitions/Event'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
  '/shops/{shop_id}/invoices/{invoice_id}/payments/stats/finance':
    get:
      description: Get payments finance stats
      tags:
        - Payments
      operationId: getPaymentsStatFinance
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: invoice_id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: from
          in: query
          description: Stat date from
          required: true
          type: string
          format: date
        - name: to
          in: query
          description: Stat date to
          required: true
          type: string
          format: date
        - name: bucket_size
          in: query
          description: Number of entities
          required: true
          type: integer
      responses:
        '201':
          description: Payment stats finance object
          schema:
            type: array
            items:
                $ref:  '#/definitions/PaymentsStatFinance'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
  '/shops/{shop_id}/invoices/{invoice_id}/payments':
    post:
      description: Start new payment
      tags:
        - Payments
      operationId: createPayment
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: invoice_id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: createPaymentArgs
          description: Invoice initiation request
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePaymentArgs'
      responses:
        '201':
          description: Payment created
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
  '/shops/{shop_id}/invoices/{invoice_id}/payments/{payment_id}':
    get:
      description: Get payment info
      tags:
        - Payments
      operationId: getPaymentByID
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
        - name: invoice_id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: payment_id
          in: path
          description: Payment ID
          required: true
          type: string
        - name: from
          in: query
          description: Stat date from
          required: true
          type: string
          format: date
        - name: to
          in: query
          description: Stat date to
          required: true
          type: string
          format: date
        - name: bucket_size
          in: query
          description: Number of entities
          required: true
          type: integer
      responses:
        '200':
          description: Payment object
          schema:
            $ref: '#/definitions/Payment'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
  '/shops/{shop_id}/customers/geo_stats':
    get:
      description: Get customers geo info
      tags:
        - Customers
      operationId: getCustomersStatGeo
      parameters:
        - $ref: '#/parameters/requestID'
        - name: shop_id
          in: path
          description: Shop ID
          required: true
          type: string
      responses:
        '200':
          description: Geo stats object
          schema:
            type: array
            items:
                $ref:  '#/definitions/CustomersStatGeo'
        '404':
          $ref: '#/responses/NotFound'
  /payment_tools:
    post:
      description: Create new card data token
      tags:
        - Tokens
      operationId: createPaymentToolToken
      parameters:
        - $ref: '#/parameters/requestID'
        - name: paymentTool
          description: Payment tool to tokenize
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentTool'
      responses:
        '201':
          description: Token created
          schema:
            type: object
            required:
              - token
              - session
            properties:
              token:
                type: string
              session:
                type: string
        '400':
          $ref: '#/responses/BadRequest'
definitions:
  CustomersStatGeo:
    type: object
    required:
      - geo_stats
    properties:
      geo_stats:
        $ref: '#/definitions/IntMap'
  InvoicesStatFinance:
    type: object
    required:
      - unpaid
      - fulfilled
    properties:
      unpaid:
        type: integer
      fulfilled:
        type: integer
  PaymentsStatFinance:
    type: object
    required:
      - payment_methods
      - average_check
      - conversion
    properties:
      payment_methods:
        type: array
        items:
          $ref: '#/definitions/IntMap'
      average_check:
        type: integer
      conversion:
        type: integer
  IntMap:
    type: object
    required:
      - name
      - amount
    properties:
      name:
        type: string
      amount:
        type: integer
  AccountStatFinance:
    type: object
    required:
      - balance
    properties:
      balance:
        type: integer
  PaymentTool:
    type: object
    discriminator: paymentToolType
    properties:
      paymentToolType:
        type: string
        enum:
          - cardData
    required:
      - paymentToolType
  CardData:
    type: object
    allOf:
      - $ref: '#/definitions/PaymentTool'
      - type: object
        required:
          - cardNumber
          - expDate
          - cvv
        properties:
          cardHolder:
            type: string
          cardNumber:
            type: string
            pattern: ^\d{10,19}$
          expDate:
            type: string
            pattern: ^\d{2}\/\d{2}$
          cvv:
            type: string
            pattern: ^\d{3,4}$
  Invoice:
    type: object
    required:
      - shopID
      - amount
      - currency
      - context
      - product
      - description
    properties:
      id:
        type: string
      shopID:
        type: string
      amount:
        type: integer
        format: int64
      currency:
        type: string
      context:
        $ref: '#/definitions/InvoiceContext'
      dueDate:
        type: string
        format: dateTime
      status:
        type: string
        enum:
          - unpaid
          - cancelled
          - paid
          - partial
          - refunded
          - fulfilled
      product:
        type: string
      description:
        type: string
  CreateInvoiceArgs:
    type: object
    required:
      - shopID
      - amount
      - currency
      - product
      - description
    properties:
      shopID:
        type: string
      amount:
        type: integer
        format: int64
      currency:
        type: string
      context:
        $ref: '#/definitions/InvoiceContext'
      dueDate:
        type:
          string
        format:
          dateTime
      product:
        type: string
      description:
        type: string
  CreatePaymentArgs:
    type: object
    required:
      - paymentToolToken
      - paymentSession
    properties:
      paymentToolToken:
        type: string
      paymentSession:
        type: string
  Payment:
    type: object
    required:
      - id
      - invoiceID
      - createdAt
      - status
      - paymentToolToken
    properties:
      id:
        type: string
      invoiceID:
        type: string
      createdAt:
        type: string
        format: dateTime
      status:
        type: string
        enum:
          - pending
          - succeeded
          - failed
      paymentToolToken:
        type: string
  Event:
    type: object
    required:
      - id
      - eventType
    properties:
      id:
        type: string
      eventType:
        type: object
  GeneralError:
    type: object
    required:
      - message
    properties:
      message:
        type: string
  LogicError:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
  InvoiceContext:
    type: object
    maxLength: 512
