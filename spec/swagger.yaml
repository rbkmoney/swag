swagger: '2.0'
info:
  version: 1.0.0
  title: RBKmoney Platform API
  description: >
    # Описание

    RBKmoney API является базовой и единственной точкой взаимодействия с
    платежной платформой. Все изменения состояний платформы осуществляются с
    помощью вызовов соответствующих методов API. Любые сторонние приложения,
    включая наши веб-сайты и другие UI-интерфейсы являются внешними
    приложениями-клиентами.

    RBKmoney API работает поверх HTTP-протокола. Мы используем REST архитектуру,
    схема описывается в соответствии со [Swagger](http://swagger.io/). Коды
    возврата описываются соответствующими HTTP-статусами. Платформа принимает и
    возвращает JSON-структуры в HTTP body.

    # Идемпотентные запросы

    Любой вызов методов API обязан предваряться предоставлением уникального для
    участника в пределах платформы ID запроса. Данный ID передается в
    соответствующем заголовке HTTP-запроса:

    ```
     X-Request-ID: c7c7b7b5-562f-45b1-9046-9aadd8776dd7
    ```

    Для генерации ID запросов мы рекомендуем использовать алгоритмы генерации из
    стандарта [RFC-4122](https://www.ietf.org/rfc/rfc4122.txt). Платформа
    гарантирует идемпотентность запросов, отправленных с одинаковым ID.

    # Тип содержимого и кодировка

    Любой запрос к API должен выполняться в кодировке UTF-8 и с указанием содержимого в формате JSON

    ```
      Content-Type: application/json; charset=utf-8
    ```    
  termsOfService: 'http://rbkmoney.com/'
  contact:
    name: RBKmoney support team
    email: support@rbk.money
    url: 'https://api.rbk.money'
host: api.rbk.money
basePath: /v1
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >
      Для аутентификации вызовов мы используем [JWT](https://jwt.io). Ваш
      приватный ключ и ключ для токенизации вы можете получить в личном
      кабинете. Для аутентификации запросов соответствующий ключ передается в
      заголовке.

      ```shell
       Authorization: Bearer {TOKENIZATION|PRIVATE_JWT}
      ```

      Ключи не разделяются на тестовые и боевые, ваш приватный ключ открывает
      доступ ко всем функциям платформы. Для тестовых транзакций используйте ID
      тестовых магазинов.

      Помните, что вы никому не должны передавать ваш приватный ключ!
security:
  - bearer: []
responses:
  NotFound:
    description: Entity not found
    schema:
      $ref: '#/definitions/GeneralError'
  BadRequest:
    description: Illegal input for operation
    schema:
      $ref: '#/definitions/LogicError'
parameters:
  requestID:
    name: X-Request-ID
    in: header
    description: Уникальный идентификатор запроса к системе
    required: true
    type: string
  claimID:
    name: claimID
    in: path
    description: Идентификатор заявки
    required: true
    type: integer
    format: int64
  shopID:
    name: shopID
    in: path
    description: Идентификатор магазина
    required: true
    type: integer
    format: int32
  invoiceID:
    name: invoiceID
    in: path
    description: Идентификатор инвойса
    required: true
    type: string
  contractID:
    name: contractID
    in: path
    description: Идентификатор договора
    required: true
    type: integer
    format: int32
  fromTime:
    name: fromTime
    in: query
    description: Начало временного отрезка
    required: true
    type: string
    format: date-time
  toTime:
    name: toTime
    in: query
    description: Конец временного отрезка
    required: true
    type: string
    format: date-time
  splitUnit:
    name: splitUnit
    in: query
    description: Единица времени сегмента разбиения
    required: true
    type: string
    enum:
      - minute
      - hour
      - day
      - week
      - month
      - year
  splitSize:
    name: splitSize
    in: query
    description: Размер сегмента разбиения
    required: true
    type: integer
    format: int32
    minimum: 1
  limit:
    name: limit
    in: query
    description: Лимит выборки
    required: false
    type: integer
    format: int32
    minimum: 1
  offset:
    name: offset
    in: query
    description: Смещение выборки
    required: false
    type: integer
    minimum: 0
tags:
  - name: Parties
    x-displayName: Участники
    description: >
      Участник системы объединяет в себе данные о вашей организации, списке и
      условиях договоров, заключенных с вами, а также информацию о привязанных к
      организации сотрудниках. Идентификатором участника является email,
      использованный при регистрации. Если вы зарегистрировались впервые, то это
      учетная запись, с которой проводилась регистрация в личном кабинете.
  - name: Claims
    x-displayName: Заявки
    description: >
      Некоторая область данных может быть изменена только после премодерации на
      стороне платформы. Например, создание и активация новых магазинов,
      изменение финансовых данных вашего участника и т.п. требуют ручной
      проверки сотрудниками RBKmoney. Попытка изменить такие данные приводит к
      автоматическому созданию заявки на изменение данных. До тех пор, пока
      заявка не одобрена, вы можете добавлять изменения. После одобрения они
      будут применены к набору данных. В случае отказа по заявке данные
      останутся в неизменном состоянии. Ближайшим аналогом заявок можно
      представить Pull Request в распределенных системах контроля версий.
  - name: Shops
    x-displayName: Магазины
    description: >
      Магазин - это отображение вашего веб-сайта или точки продаж в платформе. К
      магазину привязываются финансовые условия, которые определяют, в
      частности, процент комиссии платформы. Каждый магазин в системе имеет
      привязанные счета, на которых аккумулируются отправленные плательщиками
      деньги. В каждой валюте может существовать только один счет. Категория
      магазина определяет группы товаров или услуг, которые в нем представлены.
      К магазину может быть привязан банковский терминал на стороне
      банка-эквайера. Любые изменения данных магазинов требуют верификации на
      стороне платформы.

      Для тестовых платежей используются магазины, созданные в тестовой
      категории. Первый тестовый магазин платформа создает автоматически при
      регистрации участника.

      Ваш веб-сайт или точка продаж могут иметь более одного магазина, ближайшим
      аналогом можно представить банковские POS-терминалы на точке продаж.

      # Асинхронные уведомления

      В каждом магазине возможно указать URL для получения асинхронных
      уведомлений (callback) об изменении состояния данных. Например, если вы
      используете неперсистентные интерпретируемые языки разработки, такие как
      PHP, вы можете указать callback URL вашего приложения, на который
      платформа будет отправлять данных об изменении состояния инвойса. Для
      проверки подлинности присланных на ваш callback URL данных используется
      ключ для обратных нотификаций (Callback Key), который является публичным
      ключом платформы. Получить данный ключ можно в вашем личном кабинете.
  - name: Invoices
    x-displayName: Инвойсы
    description: >
      Инвойс - это базовая часть работы с платформой по приему платежей. Перед
      рендерингом платежной формы, запуском транзакций на списание денег,
      холдированием средств на карте плательщика и запуском других подобных
      бизнес-процессов, необходимо создать инвойс и узнать его идентификатор.

      В общем случае, инвойс является контейнером для платежей, данных о товарах
      и магазине. Инвойсы имеют настраиваемый ограниченный срок жизни. После
      истечения срока жизни состояние инвойса изменить невозможно.


      # Состояния и статусы инвойса

      Таблица состояний инвойса:
        |    |    |    |
        | -- | -- | -- |
        | Не оплачен | `unpaid` | Инвойс создан, но финансовые обязательства ещё не погашены. |
        | Отменён | `cancelled` | Инвойс отменён с указанием причины, все обязательства по нему недействительны. |
        | Оплачен | `paid` | Финансовые обязательства по инвойсу погашены, но товары или услуги плательщику ещё не предоставлены. |
        | Погашен | `fulfilled` | Все обязательства, как плательщика, так и мерчанта, погашены. |
        | Возмещён | `refunded` | Мерчанту не удалось выполнить свои обязательства, и финансовые обязательства плательщика были возмещены. |

      В узлах диаграммы указаны статусы инвойса, стрелки помечены процессами,
      успешное завершение которых порождает переход из одного статуса в другой.

      ![Invoice State diagram](wsd/img/invoice.svg)

      # Метаданные инвойса

      Платформа предоставляет вам возможность заполнить и сохранить любые
      необходимые метаданные в структуре инвойса. Данные описываются массивом
      JSON. В дальнейшем платформа предоставит вам эти данные при запросе данных
      инвойса по его ID либо пришлет в асинхронном режиме на указанный Callback
      URL.

      # События инвойса

      Мы используем event-based, или событийную архитектуру для любого изменения
      состояния данных в платформе. События, которые генерируют участники
      процесса привязываются к объектам системы, и таким образом позволяют
      узнать конечное состояние данных объекта. В системе можно получить как
      полный список событий, приведших к определенному состоянию данных, так и
      последнее событие, описывающее текущее состояние объекта. Например, для
      того, чтобы узнать состояние инвойса, и таким образом принять решение об
      отгрузке товара или предоставлении услуги плательщику, можно запросить у
      платформы все события, произошедшие в рамках указанного ID инвойса, либо
      самое последнее из них.
  - name: Accounts
    x-displayName: Счета
    description: >
      Каждый магазин в платформе имеет привязанные счета, на которых
      аккумулируются средства плательщиков. К магазину может быть привязан счет
      в любой валюте, если это описано в рамках договора с участником системы,
      однако не более одного счета в одинаковой валюте.

      Счета разделяются на два основных типа - основной счет и счет гарантийного
      фонда.

      Основной счет используется для оперативных взаиморасчетов между
      банковскими счетами RBKmoney и вашими банковскими счетами для вывода
      средств. Вывод средств предваряется суммированием всех средств со счетов
      ваших магазинов и последующим переводом с помощью банковских транзакций,
      либо других средств вывода денег из системы.

      Счет гарантийного фонда используется для накопления определенных сумм
      средств от оборота магазина так, как это указано в договоре с участником.
  - name: Payments
    x-displayName: Платежи
    description: >
      Реальное списание денег с плательщиков осуществляется вызовом метода
      создания платежа. Перед запуском платежей необходимо создать инвойс, в
      рамках которого платформа будет проводить попытки списания, а также
      указать токен платежного средства плательщика. Таким образом, платформа
      предоставляет вам интерфейс, позволяющий со стороны вашего серверного кода
      инициировать и контролировать процесс списания денег. Данный процесс может
      быть, как синхронным, когда вы ожидаете ответа системы, так и асинхронным,
      когда после запуска платежа вы ожидаете уведомлений на callback URL
      магазина.

      # Платежная сессия

      Платформа обеспечивает идемпотентность списания денег с платежного
      средства, предоставляя уникальный идентификатор платежной сессии. Данный
      идентификатор предоставляется в процессе создания токена платежного
      средства и гарантирует идемпотентность запросов на списание средств,
      обеспечивая защиту от ошибочных повторных списаний.
  - name: Tokens
    x-displayName: Токены
    description: >
      Платформа предоставляет вам возможность самостоятельно инициировать
      списание денег с платежных карт плательщиков и берет на себя процессы
      сертификации и соответствия стандартам PCS-DSS. Стандарт декларирует
      запрет на обработку и хранение данных держателей карт (ДДК) на стороне
      мерчанта. Используемые нами подходы к реализации интерфейса подразумевают
      возможность верстки и отдачи HTML формы для ввода ДДК на стороне вашего
      серверного кода. Чтобы обеспечить соответствие стандартам мы предоставляем
      разработанную нами JS-библиотеку, которая после встраивания в HTML-код
      вашей платежной формы в асинхронном режиме собирает ДДК и отправляет на
      интерфейс платформы для дальнейшего шифрования и токенизации. В ответ
      JS-библиотека возвращает на вашу платежную форму уникальный токен
      платежной карты, который в дальнейшем вы можете использовать для запуска
      платежей.

      # Платежная сессия

      Платформа обеспечивает идемпотентность списания денег с платежного
      средства, предоставляя уникальный идентификатор платежной сессии. Данный
      идентификатор предоставляется в процессе создания токена платежного
      средства и гарантирует идемпотентность запросов на списание средств,
      обеспечивая защиту от ошибочных повторных списаний.
  - name: Categories
    x-displayName: Категории магазинов
    description: >
      Для описания групп товаров и услуг, предоставляемых магазинами,
      используются категории. Категории могут влиять на предоставление
      статистики, упорядочивание магазинов, а также на финансовые условия
      системы.
  - name: Contracts
    x-displayName: Договоры
    description: >
      Договор содержит данные юридического соглашения, на основе которого
      система предоставляет всевозможные услуги мерчанту. В договоре, в
      частности описывается набор условий, по которым предоставляются сервисы
      платформы, например, комиссии на проведение транзакций, условия вывода
      средств и данных юридического лица.

      Любые изменения данных магазинов требуют верификации на стороне платформы
      путем создания заявок на изменение.
  - name: Payouts
    x-displayName: Вывод средств
    description: >
      Для получения автоматических выплат по принятым платежам на ваш банковский
      счет необходимо в рамках договора с системой указать данные для вывода
      средства. В дальнейшем по указанным данным система будет инициировать
      банковские переводы на основе суммы платежей, принятой по всем активным
      магазинам.

      Любые изменения данных требуют верификации на стороне платформы путем
      создания заявок на изменение.
  - name: Geo
    x-displayName: Геопозиционирование
    description: >
      Для отображения геоданных плательщиков существуют вспомогательные
      операции, например, получение названия геопозиции по её идентификатору.
  - name: Search
    x-displayName: Поиск инвойсов
    description: >
      Для получения списка всех инвойсов указанного магазина необходимо вызвать
      соответствующий метод платформы. Также имеется возможность отфильтровать
      выборку по определенным статусам инвойсов.
  - name: Analytics
    x-displayName: Аналитика
    description: >
      Платформа предоставляет возможность получения различных аналитических
      данных, полученных в рамках взаимодействия с ней. Аналитические отчеты
      подготовлены заранее и не подразумевают интерактивного изменения структуры
      данных. Для получения дополнительных наборов данных необходимо обратиться
      к вашему курирующему менеджеру.
  - name: Error Codes
    x-displayName: Коды ошибок 
    description: >

      # Ошибки бизнес-логики

      Все ошибки бизнес-логики имеют следуюший вид:

        ```json
        {          
          "code": "string", 
          "message": "string"       
        }
        ```

      В поле `code` содержится тип ошибки, а в `message` - дополнительная информация по произошедшей ошибке.

      На данный момент существуют следующие коды ошибок:

        |  Код  |  Описание  |
        | -- | -- |
        | **invalidUser**  | Запрос невозможен для данного пользователя. |
        | **invalidRequest** | Запрос соответствует спецификации, но не удовлетворяет остальным параметрам системы. Например, попытка создания инвойса с несуществующей валютой |
        | **invalidInvoiceStatus** | Запрос невозможен из-за ненадлежащего статуса инвойса. Например, попытка оплаты погашенного инвойса |
        |  **invalidPartyStatus** | Запрос невозможен из-за ненадлежащего статуса пользователя. Например, попытка создания инвойса для заблокированного пользователя |
        | **invalidPaymentStatus** | Запрос невозможен из-за ненадлежащего статуса платежа. Например, попытка аннулировать инвойс, по которому имеется незавершенный платеж |
        | **invalidShopStatus** | Запрос невозможен из-за ненадлежащего статуса магазина. Например, попытка создания инвойса в рамках магазина со статусом "приостановлен" |
        | **invalidContractStatus** | Запрос невозможен из-за ненадлежащего статуса контракта. Например, попытка создания магазина с контрактом, у которого истек срок действия |


      # Общие ошибки

      Ошибки возникающие при попытках совершения операций с незарегистрированными в системе объектами.
      Имеют вид

        ```json
        {
            "message": "string"
        }
        ```

      В поле `message` содержится информация по произошедшей ошибке. Например:

        ```json
        {
            "message": "Invoice not found"
        }
        ```