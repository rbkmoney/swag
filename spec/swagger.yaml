swagger: '2.0'
info:
  version: 2.0.0
  title: RBKmoney Platform API
  description: >
    ## Описание

    RBKmoney API является базовой и единственной точкой взаимодействия с
    платежной платформой. Все изменения состояний платформы осуществляются с
    помощью вызовов соответствующих методов API. Любые сторонние приложения,
    включая наши веб-сайты и другие UI-интерфейсы являются внешними
    приложениями-клиентами.

    RBKmoney API работает поверх HTTP-протокола. Мы используем REST архитектуру,
    схема описывается в соответствии со [Swagger](http://swagger.io/). Коды
    возврата описываются соответствующими HTTP-статусами. Платформа принимает и
    возвращает JSON-структуры в HTTP body.

    ## Запросы

    Любой вызов методов API обязан предваряться предоставлением уникального для
    участника в пределах платформы ID запроса. Данный ID передается в
    соответствующем заголовке HTTP-запроса:

    ```
     X-Request-ID: oX5MWM2AQy
    ```

    ## Тип содержимого и кодировка

    Любой запрос к API должен выполняться в кодировке UTF-8 и с указанием
    содержимого в формате JSON

    ```
      Content-Type: application/json; charset=utf-8
    ```

    ## Формат дат

    Платформа принимает значения date-time в стандарте ISO 8601 с обязательным
    указанием UTC-оффсета, например:

    ```
      2017-01-01T00:00:00Z
      2017-01-01T00:00:01+00:00
    ```

    ## Максимальное время обработки запроса

    К любому вызову методов API можно добавить параметр отсечки по времени,
    определяющий максимальное время ожидания завершения операции по запросу.
    Данная отсечка передается в соответствующем заголовке HTTP-запроса:

    ```
     X-Request-Deadline: 10s
    ```

    Значение отсечки может быть задано в формате ISO 8601 (см. [Формат дат](#section/Format-dat)), либо
    в относительных величинах, например:

    `150000ms`, `540s`, `3.5m`
    При этом возможные единицы измерения `ms`, `s`, `m`.
    В обоих случаях  не рекомендуется, чтобы задаваемое значение было
    меньше **3 секунд** и превышало **1 минуту**.
  termsOfService: 'https://rbk.money/'
  contact:
    name: RBKmoney support team
    email: support@rbk.money
    url: 'https://api.rbk.money'
host: api.rbk.money
basePath: /v2
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >
      Для авторизации вызовов мы используем [JWT](https://jwt.io).
      Cоответствующий ключ передается в заголовке.

      ```shell
       Authorization: Bearer {JWT}
      ```

      Посмотреть ваш API-ключ вы можете в [личном
      кабинете](https://dashboard.rbk.money/).


      Обратите внимание, что API-ключ должен использоваться исключительно для межсерверного взаимодействия.

      Для авторизации запросов, выполняемых из контекста браузера плательщика (например, токенизация платежных данных методом [createPaymentResource](https://developer.rbk.money/api/#operation/createPaymentResource)) используйте полученный при вызове [createInvoice](https://developer.rbk.money/api/#operation/createInvoice) `invoiceAccessToken`, либо создайте его напрямую, вызвав метод [createInvoiceAccessToken](https://developer.rbk.money/api/#operation/createInvoiceAccessToken).


      При попытке вызова [createPaymentResource](https://developer.rbk.money/api/#operation/createPaymentResource) с ключом, отличным от invoiceAccessToken, платформа вернет ошибку авторизации со статусом HTTP/401.


      Ключи не разделяются на тестовые и боевые, ваш API ключ открывает доступ
      ко всем функциям платформы. Для тестовых транзакций используйте ID
      тестовых магазинов.





      Помните, что вы никому не должны передавать ваш API ключ!
security:
  - bearer: []
responses:
  NotFound:
    description: Заданный ресурс не найден
    schema:
      $ref: '#/definitions/GeneralError'
  Unauthorized:
    description: Ошибка авторизации
  DefaultLogicError:
    description: Неверные данные
    schema:
      $ref: '#/definitions/DefaultLogicError'
  ExternalIDConflict:
    description: Переданное значение `externalID` уже использовалось вами ранее с другими параметрами запроса
    schema:
      $ref: '#/definitions/ExternalIDConflictError'
parameters:
  accountID:
    name: accountID
    in: path
    description: Account ID
    required: true
    type: integer
    format: int64
  requestID:
    name: X-Request-ID
    in: header
    description: Уникальный идентификатор запроса к системе
    required: true
    type: string
    maxLength: 32
    minLength: 1
  claimID:
    name: claimID
    in: path
    description: Идентификатор заявки
    required: true
    type: integer
    format: int64
  claimRevision:
    name: claimRevision
    in: query
    description: Версия заявки
    required: true
    type: integer
    format: int32
  shopID:
    name: shopID
    in: path
    description: Идентификатор магазина
    required: true
    type: string
    maxLength: 40
    minLength: 1
  invoiceTemplateID:
    name: invoiceTemplateID
    in: path
    description: Идентификатор шаблона инвойса
    required: true
    type: string
    maxLength: 40
    minLength: 1
  paymentID:
    name: paymentID
    in: path
    description: Идентификатор платежа в рамках инвойса
    required: true
    type: string
    maxLength: 40
    minLength: 1
  refundID:
    name: refundID
    in: path
    description: Идентификатор возврата в рамках платежа
    required: true
    type: string
    maxLength: 40
    minLength: 1
  contractID:
    name: contractID
    in: path
    description: Идентификатор договора
    required: true
    type: string
    maxLength: 40
    minLength: 1
  residence:
    name: residence
    in: query
    description: >-
      Резиденция, alpha-3 код по стандарту [ISO
      3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
    required: false
    type: string
    pattern: '^[A-Z]{3}$'
  customerID:
    name: customerID
    in: path
    description: Идентификатор кастомера
    required: true
    type: string
    maxLength: 40
    minLength: 1
  customerBindingID:
    name: customerBindingID
    in: path
    description: Идентификатор привязки к кастомера
    required: true
    type: string
    maxLength: 40
    minLength: 1
  webhookID:
    name: webhookID
    in: path
    description: Идентификатор webhook'а
    required: true
    type: string
    maxLength: 40
    minLength: 1
  adjustmentID:
    name: adjustmentID
    in: path
    description: Идентификатор поправки к договору
    required: true
    type: string
    maxLength: 40
    minLength: 1
  payoutToolID:
    name: payoutToolID
    in: path
    description: Идентификатор средства вывода
    required: true
    type: string
    maxLength: 40
    minLength: 1
  payoutID:
    name: payoutID
    in: path
    description: Идентификатор вывода
    required: true
    type: string
    maxLength: 40
    minLength: 1
  reportID:
    name: reportID
    in: path
    description: Идентификатор отчета
    required: true
    type: integer
    format: int64
  fileID:
    name: fileID
    in: path
    description: Идентификатор файла
    required: true
    type: string
    maxLength: 40
    minLength: 1
  invoiceID:
    name: invoiceID
    in: path
    description: Идентификатор инвойса
    required: true
    type: string
    maxLength: 40
    minLength: 1
  paymentInstitutionID:
    name: paymentInstitutionID
    in: path
    description: Payment institution reference
    required: true
    type: integer
    format: int32
  fromTime:
    name: fromTime
    in: query
    description: Начало временного отрезка
    required: true
    type: string
    format: date-time
  toTime:
    name: toTime
    in: query
    description: Конец временного отрезка
    required: true
    type: string
    format: date-time
  splitUnit:
    name: splitUnit
    in: query
    description: Единица времени сегмента разбиения
    required: true
    type: string
    enum:
      - minute
      - hour
      - day
      - week
      - month
      - year
  splitSize:
    name: splitSize
    in: query
    description: Размер сегмента разбиения
    required: true
    type: integer
    format: int32
    minimum: 1
  limit:
    name: limit
    in: query
    description: Лимит выборки
    required: true
    type: integer
    format: int32
    minimum: 1
    maximum: 1000
  offset:
    name: offset
    in: query
    description: Смещение выборки
    required: false
    type: integer
    minimum: 0
  deadline:
    name: X-Request-Deadline
    in: header
    description: Максимальное время обработки запроса
    required: false
    type: string
    maxLength: 40
    minLength: 1
tags:
  - name: Parties
    x-displayName: Участники
    description: >
      Участник системы объединяет в себе данные о вашей организации, списке и
      условиях договоров, заключенных с вами, а также информацию о привязанных к
      организации сотрудниках. Идентификатором участника является email,
      использованный при регистрации. Если вы зарегистрировались впервые, то это
      учетная запись, с которой проводилась регистрация в личном кабинете.
  - name: Claims
    x-displayName: Заявки
    description: >
      Некоторая область данных может быть изменена только после премодерации на
      стороне платформы. Например, создание и активация новых магазинов,
      изменение финансовых данных вашего участника и т.п. требуют ручной
      проверки сотрудниками RBKmoney. Попытка изменить такие данные приводит к
      автоматическому созданию заявки на изменение данных. До тех пор, пока
      заявка не одобрена, вы можете добавлять изменения. После одобрения они
      будут применены к набору данных. В случае отказа по заявке данные
      останутся в неизменном состоянии. Ближайшим аналогом заявок можно
      представить Pull Request в распределенных системах контроля версий.
  - name: Shops
    x-displayName: Магазины
    description: >
      Магазин - это отображение вашего веб-сайта или точки продаж в платформе. К
      магазину привязываются финансовые условия, которые определяют, в
      частности, процент комиссии платформы. Каждый магазин в системе имеет
      привязанные счета, на которых аккумулируются отправленные плательщиками
      деньги. В каждой валюте может существовать только один счет. Категория
      магазина определяет группы товаров или услуг, которые в нем представлены.
      К магазину может быть привязан банковский терминал на стороне
      банка-эквайера. Любые изменения данных магазинов требуют верификации на
      стороне платформы.

      Для тестовых платежей используются магазины, созданные в тестовой
      категории. Первый тестовый магазин платформа создает автоматически при
      регистрации участника.

      Ваш веб-сайт или точка продаж могут иметь более одного магазина, ближайшим
      аналогом можно представить банковские POS-терминалы на точке продаж.

      ## Асинхронные уведомления

      Для любого магазина можно указать URL для получения асинхронных оповещений
      об изменении состояния данных при помощи установки webhook'а. Например,
      если вы используете неперсистентные интерпретируемые языки разработки,
      такие как PHP, вы можете установить webhook, указав URL вашего приложения,
      на который платформа будет отправлять данных об изменении состояния
      инвойса. Для проверки подлинности присланных на URL вашего приложения
      данных используется соответствующий публичный ключ, который создаётся при
      установке этого webhook'а и получить который можно в вашем личном
      кабинете.
  - name: Invoices
    x-displayName: Инвойсы
    description: |
      Инвойс - это базовая часть работы с платформой по приему платежей. Перед
      рендерингом платежной формы, запуском транзакций на списание денег,
      холдированием средств на карте плательщика и запуском других подобных
      бизнес-процессов, необходимо создать инвойс и узнать его идентификатор.

      В общем случае, инвойс является контейнером для платежей, данных о товарах
      и магазине. Инвойсы имеют настраиваемый ограниченный срок жизни. После
      истечения срока жизни состояние инвойса изменить невозможно.


      ## Состояния и статусы инвойса

      ### Таблица состояний инвойса:
        | Состояние   | Обозначение   |  Описание  |
        | -- | -- | -- |
        | Не оплачен | `unpaid` | Инвойс создан, но финансовые обязательства ещё не погашены. |
        | Отменён | `cancelled` | Инвойс отменён с указанием причины, все обязательства по нему недействительны. |
        | Оплачен | `paid` | Финансовые обязательства по инвойсу погашены, но товары или услуги плательщику ещё не предоставлены. |
        | Погашен | `fulfilled` | Все обязательства, как плательщика, так и мерчанта, погашены. |
        | Возмещён | `refunded` | Мерчанту не удалось выполнить свои обязательства, и финансовые обязательства плательщика были возмещены. |

      В узлах диаграммы указаны статусы инвойса, стрелки помечены процессами,
      успешное завершение которых порождает переход из одного статуса в другой.

      ![Invoice State diagram](wsd/img/invoice.svg)

      ## Метаданные инвойса и платежа

      Платформа предоставляет вам возможность заполнить и сохранить любые
      необходимые метаданные как в структуре инвойса, так и в структуре любого платежа.
      Данные описываются массивом JSON. В дальнейшем платформа предоставит
      вам эти данные при запросе данных инвойса или платежа по его идентификатору
      либо пришлет в асинхронном режиме на webhook, установленный для соответствующего
      магазина, если он есть.

      ## События инвойса

      Мы используем event-based, или событийную архитектуру для любого изменения
      состояния данных в платформе. События, которые генерируют участники
      процесса привязываются к объектам системы, и таким образом позволяют
      узнать конечное состояние данных объекта. В системе можно получить как
      полный список событий, приведших к определенному состоянию данных, так и
      последнее событие, описывающее текущее состояние объекта. Например, для
      того, чтобы узнать состояние инвойса, и таким образом принять решение об
      отгрузке товара или предоставлении услуги плательщику, можно запросить у
      платформы все события, произошедшие в рамках указанного ID инвойса, либо
      самое последнее из них.

      ## Authorization

      Операции:

      * создания инвойса,

      * отмены инвойса,

      * погашения инвойса,

      * получения *нового* токена доступа к инвойсу (уже после создания инвойса)


      авторизуются вашим API-ключом.

      ### Токен доступа к инвойсу

      Токен доступа к инвойсу авторизует ограниченное количество операций,
      необходимых для проведения [платежей](#tag/Payments) по указанному
      инвойсу, в частности:

      * [токенизация](#tag/Tokens) платёжных инструментов,

      * создание платежей по этому и только этому инвойсу,

      * получение состояния и событий этого инвойса.


      Срок действия токена составляет 3 суток от момента создания, после
      истечения которого использовать его для авторизации операций будет более
      невозможно.
  - name: InvoiceTemplates
    x-displayName: Шаблоны инвойсов
    description: >
      Шаблоны инвойсов позволяют упростить выставление инвойсов. Шаблон инвойса
      привязан к конкретному магазину и содержит спецификацию, по которой можно
      создавать инвойсы, указывая только конкретнyю стоимость товаров и услуг
      и/или метаданные инвойса. В случае, если шаблон содержит фиксированную
      стоимость, её также можно опустить при создании инвойса. Если при создании
      инвойса по шаблону не указать метаданные инвойса, они будут взяты из
      значения в шаблоне (если шаблон содержит метаданные).


      Cоздание, модификация и удаление шаблона инвойса не требуют верификации на
      стороне платформы и заявок на эти изменения.

      ## Authorization

      Создание, модификация и удаление шаблона инвойса авторизуются вашим
      API-ключом.

      ### Токен доступа к шаблону инвойса

      Токен доступа к шаблону инвойса создается в результате операции создания
      шаблона. Он авторизует:

      * получение шаблона инвойса по его идентификатору,

      * создание инвойса по данному шаблону.
  - name: Accounts
    x-displayName: Счета
    description: >
      Каждый магазин в платформе имеет привязанные счета, на которых
      аккумулируются средства плательщиков. К магазину может быть привязан счет
      в любой валюте, если это описано в рамках договора с участником системы,
      однако не более одного счета в одинаковой валюте.

      Счета разделяются на два основных типа - основной счет и счет гарантийного
      фонда.

      Основной счет используется для оперативных взаиморасчетов между
      банковскими счетами RBKmoney и вашими банковскими счетами для вывода
      средств. Вывод средств предваряется суммированием всех средств со счетов
      ваших магазинов и последующим переводом с помощью банковских транзакций,
      либо других средств вывода денег из системы.

      Счет гарантийного фонда используется для накопления определенных сумм
      средств от оборота магазина так, как это указано в договоре с участником.
  - name: Payments
    x-displayName: Платежи
    description: >
      Реальное списание денег с плательщиков осуществляется вызовом метода
      создания платежа. Перед запуском платежей необходимо создать инвойс, в
      рамках которого платформа будет проводить попытки списания, а также
      указать токен платежного средства плательщика. Таким образом, платформа
      предоставляет вам интерфейс, позволяющий со стороны вашего серверного кода
      инициировать и контролировать процесс списания денег. Данный процесс может
      быть, как синхронным, когда вы ожидаете ответа системы, так и асинхронным,
      когда после запуска платежа вы ожидаете уведомлений на установленный для
      соответствующего магазина webhook.

      ## Варианты проведения оплаты

      Платформа предоставляет два метода выполнения операции оплаты:
      одно- и двухстадийный, PaymentFlowInstant и PaymentFlowHold.

      Одностадийная оплата (PaymentFlowInstant) выполняется вызовом одного метода API,
      по результатам которого проходит авторизация и последующее списание средств
      в пользу магазина в рамках одной транзакции.

      Двухстадийная оплата (PaymentFlowHold) подразумевает вызов двух методов:
      отдельно на авторизацию, отдельно на списание. После успешной авторизации
      сумма операции будет блокирована на счету плательщика, то есть он не сможет ей
      воспользоваться.

      Подтвердить списание (capturePayment) можно на равную или меньшую сумму
      авторизации. В случае указания меньшей суммы остаток средств будет
      автоматически возвращен плательщику.
      Подтвердить или отменить успешную авторизацию можно как вручную,
      вызвав соответствующий метод API (capturePayment или cancelPayment),
      так и автоматически, согласно выбранной стратегии onHoldExpiration.
      Срок ручного подтверждения устанавливается нами в настройках платформы и,
      как правило, составляет от 3 до 7 календарных дней.

      ## Платежная сессия

      Платформа обеспечивает идемпотентность списания денег с платежного
      средства, предоставляя уникальный идентификатор платежной сессии. Данный
      идентификатор предоставляется в процессе создания [токена платежного
      средства](#tag/Tokens) и гарантирует идемпотентность запросов на списание
      средств, обеспечивая защиту от ошибочных повторных списаний.

      ## Ограничение времени обработки платежа

      При создании платежа в рамках платформы, в поле `processingDeadline`
      можно задать время выполнения платежа, по истечении которого,
      платформа попытается прекратить обработку платежа и перевести его в
      статус `failed` с ошибкой `processing_deadline_reached`.


      Ограничение на время обработки следует рассматривать как рекомендацию,
      поскольку в зависимости от платежного средства и текущего состояния платежа у
      платформы может не быть возможности прекратить обработку.
      Если значение поля не установлено, то платформа выберет его
      самостоятельно, так чтобы было достаточно времени для прохождения
      платежа в обычных условиях.


      Ограничение времени обработки платежа, аналогично заголовку
      `X-Request-Deadline`, может указываться в формате ISO 8601 или в относительных величинах.

      ## Authorization

      Запросы API платежей авторизуются либо токеном доступа к инвойсу, по
      которому создан платеж, либо вашим API-ключом.
  - name: Tokens
    x-displayName: Платежные токены
    description: >
      Платформа предоставляет вам возможность самостоятельно инициировать
      списание денег с платежных карт плательщиков и берет на себя процессы
      сертификации и соответствия стандартам PCS-DSS. Стандарт декларирует
      запрет на обработку и хранение данных держателей карт (ДДК) на стороне
      мерчанта. Используемые нами подходы к реализации интерфейса подразумевают
      возможность верстки и отдачи HTML формы для ввода ДДК на стороне вашего
      серверного кода. Чтобы обеспечить соответствие стандартам мы предоставляем
      разработанную нами JS-библиотеку, которая после встраивания в HTML-код
      вашей платежной формы в асинхронном режиме собирает ДДК и отправляет на
      интерфейс платформы для дальнейшего шифрования и токенизации. В ответ
      JS-библиотека возвращает на вашу платежную форму уникальный токен
      платежной карты, который в дальнейшем вы можете использовать для запуска
      платежей.


      В процессе создания токена предоставляется [платежная
      сессия](#tag/Payments), обеспечивающая идемпотентность списания денег с
      платежного средства.
  - name: Categories
    x-displayName: Категории магазинов
    description: >
      Для описания групп товаров и услуг, предоставляемых магазинами,
      используются категории. Категории могут влиять на предоставление
      статистики, упорядочивание магазинов, а также на финансовые условия
      системы.
  - name: Contracts
    x-displayName: Договоры
    description: >
      Договор содержит данные юридического соглашения, на основе которого
      система предоставляет всевозможные услуги мерчанту. В договоре, в
      частности описывается набор условий, по которым предоставляются сервисы
      платформы, например, комиссии на проведение транзакций, условия вывода
      средств и данных юридического лица.

      Любые изменения данных магазинов требуют верификации на стороне платформы
      путем создания заявок на изменение.
  - name: Payouts
    x-displayName: Вывод средств
    description: >
      Для получения автоматических выплат по принятым платежам на ваш банковский
      счет необходимо в рамках договора с системой указать данные для вывода
      средств. В дальнейшем по указанным данным система будет инициировать
      банковские переводы на основе суммы платежей, принятой по всем активным
      магазинам.

      Любые изменения данных требуют верификации на стороне платформы путем
      создания заявок на изменение.
  - name: Webhooks
    x-displayName: Webhooks
    description: >
      ## RBKmoney Webhooks Management API

      В данном разделе описаны методы, позволяющие управлять Webhook'ами, или
      инструментами для получения асинхронных оповещений посредством
      HTTP-запросов при наступлении одного или группы интересующих вас событий,
      например, о том, что платеж в рамках созданного инвойса был успешно
      оплачен.

      ## RBKmoney Webhooks Events API

      Внимание! Только Webhooks Management API является частью платформы
      RBKmoney, а следовательно и данной спецификации. Для реализации
      обработчика присылаемых уведомлений вам необходимо будет ознакомиться со
      Swagger-спецификацей [RBKmoney Webhooks Events
      API](https://rbkmoney.github.io/webhooks-events-api).
  - name: Geo
    x-displayName: Геопозиционирование
    description: >
      Для отображения геоданных плательщиков существуют вспомогательные
      операции, например, получение названия геопозиции по её идентификатору.
  - name: Search
    x-displayName: Поиск
    description: >
      Для получения списка всех инвойсов/платежей указанного магазина необходимо
      вызвать соответствующий метод платформы. Имеется возможность отфильтровать
      выборку по определенным статусам.
  - name: Analytics
    x-displayName: Аналитика
    description: >
      Платформа предоставляет возможность получения различных аналитических
      данных, полученных в рамках взаимодействия с ней. Аналитические отчеты
      подготовлены заранее и не подразумевают интерактивного изменения структуры
      данных.
  - name: PaymentInstitutions
    x-displayName: Платёжные организации
    description: >
      Платёжная организация - организация, осуществляющая услуги по обслуживанию
      финансовых операций, которые возникают в результате осуществления
      бизнес-процессов системой.
  - name: Reports
    x-displayName: Отчеты
    description: >
      Один раз в отчетный период платформа автоматически подготавливает и
      размещает документы в формате XLSX с разбиением по магазину активной
      категории. Также, каждый документ будет подписан [квалифицированной
      ЭЦП](http://minsvyaz.ru/ru/appeals/faq/31/). Данная подпись является
      юридически значимой и позволяет полностью отказаться от бумажного
      документооборота.
  - name: Error Codes
    x-displayName: Коды ошибок
    description: >

      ## Ошибки бизнес-логики

      Все ошибки бизнес-логики имеют следуюший вид:

        ```json
        {
          "code": "string",
          "message": "string"
        }
        ```

      В поле `code` содержится тип ошибки, а в `message` - дополнительная
      информация по произошедшей ошибке.

      На данный момент существуют следующие коды ошибок:

        | Код                              | Описание                                                                                                                              |
        | ---                              | --------                                                                                                                              |
        | **operationNotPermitted**        | Недоступная в рамках действующего договора операция.                                                                                  |
        | **invalidPartyStatus**           | Ваш участник заблокирован или его операции приостановлены. В последнем случае вы можете их [возобновить](#operation/activateMyParty). |
        | **invalidShopStatus**            | Ваш магазин заблокирован или его операции приостановлены. В последнем случае вы можете их [возобновить](#operation/activateShop).     |
        | **invalidContractStatus**        | Ваш договор более не имеет силы, по причине истечения срока действия или расторжения.                                                 |
        | **invalidShopID**                | Указан идентификатор несуществующего магазина.                                                                                        |
        | **invalidInvoiceCost**           | Стоимость инвойса не указана или неверна, в частности, не равна стоимости позиций в корзине.                                          |
        | **invalidInvoiceCart**           | Некорректная корзина в инвойсе, Например, пустая.                                                                                     |
        | **invalidInvoiceStatus**         | Неверный [статус инвойса](#tag/Invoices). Например, при попытке [оплатить](#operation/createPayment) отменённый инвойс.               |
        | **invoicePaymentPending**        | Последний запущенный платёж по указанному инвойсу ещё не достиг финального статуса.                                                   |
        | **invalidPaymentStatus**         | Неверный [статус платежа](#tag/Payments). Например, при попытке [подтвердить](#operation/capturePayment) неуспешный платёж.           |
        | **invalidPaymentResource**       | Не поддерживаемый системой или не подключенный в рамках действующего договора платежный инструмент.                                   |
        | **invalidPaymentToolToken**      | Неверное содержимое токена платёжного инструмента.                                                                                    |
        | **invalidProcessingDeadline**    | Неверный формат ограничения времени авторизации платежа.                                                                              |
        | **invalidPaymentSession**        | Невернoе содержимое платёжной сессии.                                                                                                 |
        | **invalidRecurrentParent**       | Невернo указан родительский рекуррентный платеж.                                                                                      |
        | **insufficentAccountBalance**    | Недостаточный объём денежных средств на счёте магазина, например, для проведения возврата.                                            |
        | **invoicePaymentAmountExceeded** | Попытка возврата сверх суммы платежа.                                                                                                 |
        | **inconsistentRefundCurrency**   | Попытка возврата средств в валюте, отличной от валюты платежа.                                                                        |
        | **changesetConflict**            | Попытка внести изменения участника, конфликтующие с изменениями в других заявках, ожидающих рассмотрения.                             |
        | **invalidChangeset**             | Неверные изменения участника, например, попытка создать магазин в валюте, недоступной в рамках договора.                              |
        | **invalidClaimStatus**           | Неверный статус заявки. Например, при попытке [отзыва](#operation/revokeClaimByID) уже принятой заявки.                               |
        | **invalidClaimRevision**         | Неверная ревизия заявки. Например, в случае если заявку одновременно с вами кто-то уже принял или отклонил.                           |
        | **limitExceeded**                | Превышен разумный лимит выборки. В этом случае лучше запросить менее объёмный набор данных.                                           |
        | **invalidDeadline**              | Неверный формат времени.                                                                                                       |
        | **invalidRequest**               | Прочие неверные данные запроса.                                                                                                       |

      ## Общие ошибки

      Ошибки возникающие при попытках совершения операций с
      незарегистрированными в системе объектами. Имеют вид

        ```json
        {
            "message": "string"
        }
        ```

      В поле `message` содержится информация по произошедшей ошибке. Например:

        ```json
        {
            "message": "Invoice not found"
        }
        ```

      ## Ошибки обработки запросов

      В процессе обработки запросов силами нашей платформы могут происходить
      различные непредвиденные ситуации. Об их появлении платформа сигнализирует
      по протоколу HTTP соответствующими [статусами][5xx], обозначающими ошибки
      сервера.

        |  Код    |  Описание  |
        | ------- | ---------- |
        | **500** | В процессе обработки платформой запроса возникла непредвиденная ситуация. При получении подобного кода ответа мы рекомендуем обратиться в техническую поддержку. |
        | **503** | Платформа временно недоступна и не готова обслуживать данный запрос. Запрос гарантированно не выполнен, при получении подобного кода ответа попробуйте выполнить его позднее, когда доступность платформы будет восстановлена. |
        | **504** | Платформа превысила допустимое время обработки запроса, результат запроса не определён. Попробуйте отправить запрос повторно или выяснить результат выполнения исходного запроса, если повторное исполнение запроса нежелательно. |

      [5xx]: https://tools.ietf.org/html/rfc7231#section-6.6


      ## Ошибки платежа

      Ошибки, передаваемые в платежную форму (отображаются плательщикам):

        | Код                    | Описание                                                                                                                                      |
        | ---                    | --------                                                                                                                                      |
        | InvalidPaymentTool     | Неверный платежный инструмент (введен номер несуществующей карты, отсутствующего аккаунта и т.п.)                                             |
        | AccountLimitsExceeded  | Превышены лимиты (например, в личном кабинете плательщика установлено ограничение по сумме платежа, стране списания)                          |
        | InsufficientFunds      | Недостаточно средств на счете                                                                                                                 |
        | PreauthorizationFailed | Предварительная авторизация отклонена (введен неверный код 3D-Secure, на форме 3D-Secure нажата ссылка отмены)                                |
        | RejectedByIssuer       | Платёж отклонён эмитентом (установлены запреты по стране списания, запрет на покупки в интернете, платеж отклонен антифродом эмитента и т.п.) |
        | PaymentRejected        | платёж отклонён по иным причинам                                                                                                              |

      Ошибки, передаваемые в ЛК мерчанта (отображаются только вам):

      - timeout

        Истекло время ожидания попытки оплаты

      - rejected_by_inspector

        Отклонено сервисом противодействия мошенничеству

      - preauthorization_failed

        Ошибка предавторизации (3DS)

      - authorization_failed:

        Ошибка авторизации платежа у провайдера

        - unknown

          Неизвестная ошибка авторизации

        - merchant_blocked

          Мерчант заблокирован

        - operation_blocked

          Операция платежа заблокирована

        - account_not_found

          Аккаунт не найден

        - account_blocked

          Аккаунт заблокирован

        - account_stolen

          Аккаунт украден

        - insufficient_funds

          Не хватает средств

        - processing_deadline_reached

          Истекло время выполнения платежа (см. [Ограничение времени обработки платежа](#section/Ogranichenie-vremeni-obrabotki-platezha))

        - account_limit_exceeded:

          Превышен лимит на счете плательщика

          - unknown

            Объект лимита неизвестен

          - amount

            Лимит на сумму

          - number

            Лимит на количество попыток

        - provider_limit_exceeded:

          Превышен лимит на мерчанта у провайдера (вас или платформы RBKmoney)

          - unknown

            Объект лимита неизвестен

          - amount

            Лимит на сумму

          - number

            Лимит на количество попыток

        - payment_tool_rejected:

          Платёжный интрумент отклонён

          - unknown

            Неизвестный платёжный интрумент

          - bank_card_rejected:

            Банковская карта отклонена

            - unknown

              Причина неизвестна

            - card_number_invalid

              Неверный номер карты

            - card_expired

              Истёк срок действия карты

            - card_holder_invalid

              Неверный владелец карты

            - cvv_invalid

              Неверный CVV код

            - issuer_not_found

              Эмитент не найден

        - security_policy_violated

          Нарушения политики безопасности

        - temporarily_unavailable

          Временная недоступность третьих сторон

        - rejected_by_issuer

          Отклонено эмитентом


      Например, в случае некорретного CVV:

      ```

      {
          "code": "authorization_failed",
          "subError": {
              "code": "payment_tool_rejected",
              "subError": {
                  "code": "bank_card_rejected",
                  "subError": {
                      "code": "cvv_invalid"
                  }
              }
          }
      }

      ```

      Если вы получили ошибку, которой нет в данном описании, обратитесь в
      техническую поддержку.
